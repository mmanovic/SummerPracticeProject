// <auto-generated />
using AVLCarSystemApp.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AVLCarSystemApp.Migrations
{
    [DbContext(typeof(CarSystemContext))]
    partial class CarSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.CityDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.CountryDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.EngineDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<long>("EngineTypeId");

                    b.Property<float>("FuelConsumption");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<float>("Power");

                    b.HasKey("Id");

                    b.HasIndex("EngineTypeId");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.EngineTypeDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("EngineTypes");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.EquipmentDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AirConditioning");

                    b.Property<bool>("AutomaticTransmission");

                    b.Property<string>("Color")
                        .HasMaxLength(200);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.InventoryDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ModelId");

                    b.Property<int>("NumberOfUnitsOnStock");

                    b.Property<decimal>("Price");

                    b.Property<long?>("SalonId");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("SalonId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.ManufacturerDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CityId");

                    b.Property<long>("CountryId");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.ModelDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<long>("EngineId");

                    b.Property<long>("EquipmentId");

                    b.Property<long>("ManufacturerId");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<short>("NumberOfDoors");

                    b.Property<short>("Year");

                    b.HasKey("Id");

                    b.HasIndex("EngineId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.SalonDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CityId");

                    b.Property<long>("CountryId");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Salons");
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.EngineDto", b =>
                {
                    b.HasOne("AVLCarSystemApp.ModelsDTO.EngineTypeDto", "EngineTypeDto")
                        .WithMany("Engines")
                        .HasForeignKey("EngineTypeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.InventoryDto", b =>
                {
                    b.HasOne("AVLCarSystemApp.ModelsDTO.ModelDto", "ModelDto")
                        .WithMany("Inventories")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AVLCarSystemApp.ModelsDTO.SalonDto", "SalonDto")
                        .WithMany("Inventories")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.ManufacturerDto", b =>
                {
                    b.HasOne("AVLCarSystemApp.ModelsDTO.CityDto", "CityDto")
                        .WithMany("Manufacturers")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AVLCarSystemApp.ModelsDTO.CountryDto", "CountryDto")
                        .WithMany("Manufacturers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.ModelDto", b =>
                {
                    b.HasOne("AVLCarSystemApp.ModelsDTO.EngineDto", "EngineDto")
                        .WithMany("Models")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AVLCarSystemApp.ModelsDTO.EquipmentDto", "EquipmentDto")
                        .WithMany("Models")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AVLCarSystemApp.ModelsDTO.ManufacturerDto", "ManufacturerDto")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AVLCarSystemApp.ModelsDTO.SalonDto", b =>
                {
                    b.HasOne("AVLCarSystemApp.ModelsDTO.CityDto", "CityDto")
                        .WithMany("Salons")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AVLCarSystemApp.ModelsDTO.CountryDto", "CountryDto")
                        .WithMany("Salons")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
